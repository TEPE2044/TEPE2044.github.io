import{_ as i,c as a,o as e,ae as l}from"./chunks/framework.CTVYQtO4.js";const c=JSON.parse('{"title":"Hadoop 安装指南","description":"","frontmatter":{},"headers":[],"relativePath":"hadoop_install.md","filePath":"hadoop_install.md"}'),t={name:"hadoop_install.md"};function n(h,s,p,d,o,k){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="hadoop-安装指南" tabindex="-1">Hadoop 安装指南 <a class="header-anchor" href="#hadoop-安装指南" aria-label="Permalink to &quot;Hadoop 安装指南&quot;">​</a></h1><h3 id="谁是-hadoop" tabindex="-1">谁是 Hadoop? <a class="header-anchor" href="#谁是-hadoop" aria-label="Permalink to &quot;谁是 Hadoop?&quot;">​</a></h3><ul><li>Hadoop 是一个由 Apache 基金会所开发的分布式系统基础架构。</li><li>老爷爷，我来给你踩背来喽<span class="iconify" data-icon="devicon-plain:hadoop" style="width:128px;height:128px;"></span></li></ul><h3 id="前提" tabindex="-1">前提 <a class="header-anchor" href="#前提" aria-label="Permalink to &quot;前提&quot;">​</a></h3><ul><li>前言：适合有基础的，以前写过代码，了解过虚拟机的，甚至是安装过其他 Linux 操作的人员阅读，对无电脑基础的非常不友好！（也许是我发给你看的哈哈）!important</li><li>操作系统：CentOS 9/下载：(<a href="https://www.centos.org/download/" target="_blank" rel="noreferrer">https://www.centos.org/download/</a>)</li><li>虚拟机软件：VMware 17 pro</li></ul><h2 id="虚拟机配置" tabindex="-1">虚拟机配置 <a class="header-anchor" href="#虚拟机配置" aria-label="Permalink to &quot;虚拟机配置&quot;">​</a></h2><ul><li>新建文件夹 HadoopRoom,分别置于 Hadoop1,Hadoop2 等(方便你自己整理)</li><li>处理器 2*2</li><li>内存 2GB（2048）</li><li>NAT</li><li>20GB</li></ul><h2 id="开机配置" tabindex="-1">开机配置 <a class="header-anchor" href="#开机配置" aria-label="Permalink to &quot;开机配置&quot;">​</a></h2><ul><li>没啥，进去后记得三件事(主机名字设置 1~3，最小安装和 root 密码设置)</li><li>然后等，好了进去登陆一下就行</li></ul><h2 id="克隆" tabindex="-1">克隆 <a class="header-anchor" href="#克隆" aria-label="Permalink to &quot;克隆&quot;">​</a></h2><ul><li>侧边栏右键当前的虚拟机 hadoop1-&gt;管理-&gt;克隆</li><li>进去选（完全克隆），然后继续等，创一个文件夹 hadoop2，把当前这个也改成 hadoop2，好了就克隆第三个。。。</li></ul><h3 id="好了-正片开始" tabindex="-1">好了，正片开始！ <a class="header-anchor" href="#好了-正片开始" aria-label="Permalink to &quot;好了，正片开始！&quot;">​</a></h3><h2 id="重塑虚拟机" tabindex="-1">重塑虚拟机 <a class="header-anchor" href="#重塑虚拟机" aria-label="Permalink to &quot;重塑虚拟机&quot;">​</a></h2><ul><li><p>后面两个是克隆的，但实际上是三个不同的名字</p></li><li><p>vi /etc/hosts （这也是一个步骤！）</p><p>输入</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">192.168.220.132</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hadoop1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">192.168.220.133</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hadoop2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">192.168.220.134</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hadoop3</span></span></code></pre></div></li><li><p>网关 192.168.220.255 //有 ip 地址你就别去改了...</p></li><li><p>改名 hostnamectl set-hostname [1 到 3]</p></li></ul><h2 id="使用-winscp-和-putty-连接虚拟机-你也可以用-xshell" tabindex="-1">使用 WinSCP 和 Putty 连接虚拟机(你也可以用 Xshell) <a class="header-anchor" href="#使用-winscp-和-putty-连接虚拟机-你也可以用-xshell" aria-label="Permalink to &quot;使用 WinSCP 和 Putty 连接虚拟机(你也可以用 Xshell)&quot;">​</a></h2><h3 id="相信我-先配好-ssh" tabindex="-1">相信我，先配好 SSH! <a class="header-anchor" href="#相信我-先配好-ssh" aria-label="Permalink to &quot;相信我，先配好 SSH!&quot;">​</a></h3><ul><li>根据上面的 ip 地址配就好了，用 XShell 去吧，我这里不详细展开了</li></ul><h2 id="设置静态-ip" tabindex="-1">设置静态 ip <a class="header-anchor" href="#设置静态-ip" aria-label="Permalink to &quot;设置静态 ip&quot;">​</a></h2><ul><li>如果你用的是 CentOS 9，你会发现你的 network-scripts 里根本就没有 ifcfg</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NetworkManager将新的网络配置文件以keyfile格式存储在 /etc/NetworkManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/系统链接/目录中。 以前，NetworkManager以ifcfg格式存储网络配置文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">在这个目录下（/etc/sysconfig/network-scripts/）。但是，ifcfg格式已弃用。默认情况下，NetworkManager不再创建这种格式的新配置文件。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">密钥文件格式的连接配置文件有很多好处。例如,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">这种格式是基于INI文件的，可以很容易地解析和生成。 NetworkManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyfiles中的每一节对应一个NetworkManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">设置名称如nm-settings(5)和nm-settings-keyfile(5)所述。手册页。节中的每个键值对都是一个属性在手册页的设置规范中列出。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">如果您仍然使用ifcfg格式的网络配置文件，请考虑迁移</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">将它们转换为keyfile格式。要一次迁移所有配置文件，输入： # nmcli connection</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">migrate 此命令将所有配置文件从ifcfg格式迁移到keyfile格式 格式保存在/etc/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">networkmanager /system-connections/中。 或者，只迁移一个特定的配置文件，输入： #</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nmcli connection migrate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">profile_name|UUID|D-Bus_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  有关详情，请参阅： * nm-settings-keyfile (5) * nmcli</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (1)&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">profile_name|UUID|D-Bus_path</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li>所以之前那些东西都没办法搞，跟着我！</li></ul><h2 id="配置-hadoop1" tabindex="-1">配置 hadoop1 <a class="header-anchor" href="#配置-hadoop1" aria-label="Permalink to &quot;配置 hadoop1&quot;">​</a></h2><ul><li>0.<strong>现在正在 hadoop1 环境下工作</strong></li><li>1.<strong>打开新模式下的文件 ens33.nmconnection</strong><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/NetworkManager/system-connections/ens33.nmconnection</span></span></code></pre></div></li><li>按 i 插入，esc 退出编辑，凭空输入:wq 保存退出，凭空输入:q!退出</li><li>2.<strong>修改 ens33.nmconnection 文件</strong><ul><li>*新增:前面的是你自己的 ip（上面已经记录过了），后面是网关，查看网关的方法为 ip route show<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ipv4]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">manual//修改为手动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//*新增</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">address1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">192.168.220.132/24,192.168.220.2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">114.114.114.114</span></span></code></pre></div></li></ul></li><li>3.<strong>重新加载网络配置文件</strong><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmcli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmcli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ens33</span></span></code></pre></div></li><li>4.<strong>PING 通www.baidu.com</strong>(致命一步) 如果你这一步失败了，回退 2（屡次不行补救措施（放弃静态 ip）：恢复到只有一条 method=auto，就是要重新修改文件）<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ping</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> www.baidu.com</span></span></code></pre></div></li><li>5.<strong>有动静！成功啦！</strong></li><li>6.<strong>别高兴太早，还有 hadoop2,hadoop3</strong><ul><li>分别修改两部虚拟机的 uuid</li><li>修改 uuid<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/uuid=/c\\uuid=&#39;\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uuidgen</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/etc/NetworkManager/system-connections/ens33.nmconnection</span></span></code></pre></div></li></ul></li></ul><h2 id="ssh免密登录-deepseek生成" tabindex="-1">SSH免密登录（DeepSeek生成） <a class="header-anchor" href="#ssh免密登录-deepseek生成" aria-label="Permalink to &quot;SSH免密登录（DeepSeek生成）&quot;">​</a></h2><h4 id="a-生成-ssh-密钥对" tabindex="-1">a. 生成 SSH 密钥对 <a class="header-anchor" href="#a-生成-ssh-密钥对" aria-label="Permalink to &quot;a. 生成 SSH 密钥对&quot;">​</a></h4><p>在 <code>hadoop1</code> 上生成 SSH 密钥对（如果尚未生成）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa</span></span></code></pre></div><ul><li><code>-t rsa</code>：指定密钥类型为 RSA。</li><li><code>-P &#39;&#39;</code>：设置空密码，实现无密码登录。</li><li><code>-f ~/.ssh/id_rsa</code>：指定密钥文件的位置。</li></ul><h4 id="b-将公钥分发到所有节点" tabindex="-1">b. 将公钥分发到所有节点 <a class="header-anchor" href="#b-将公钥分发到所有节点" aria-label="Permalink to &quot;b. 将公钥分发到所有节点&quot;">​</a></h4><p>将生成的公钥 (<code>id_rsa.pub</code>) 复制到 <code>hadoop2</code> 和 <code>hadoop3</code> 的 <code>~/.ssh/authorized_keys</code> 文件中。</p><p>可以使用 <code>ssh-copy-id</code> 命令自动完成：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@hadoop2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@hadoop3</span></span></code></pre></div><p><strong>注意</strong>：如果使用非 <code>root</code> 用户，请将上述命令中的 <code>root</code> 替换为相应的用户名。</p><h4 id="c-手动添加公钥-如果-ssh-copy-id-不可用" tabindex="-1">c. 手动添加公钥（如果 <code>ssh-copy-id</code> 不可用） <a class="header-anchor" href="#c-手动添加公钥-如果-ssh-copy-id-不可用" aria-label="Permalink to &quot;c. 手动添加公钥（如果 \`ssh-copy-id\` 不可用）&quot;">​</a></h4><p>如果 <code>ssh-copy-id</code> 命令不可用，可以手动复制公钥：</p><ol><li><p>查看并复制公钥内容：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa.pub</span></span></code></pre></div></li><li><p>登录到 <code>hadoop2</code> 和 <code>hadoop3</code>，然后将复制的公钥添加到 <code>~/.ssh/authorized_keys</code> 文件中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 700</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;粘贴您的公钥内容&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/authorized_keys</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 600</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/authorized_keys</span></span></code></pre></div></li></ol><h4 id="d-测试-ssh-连接" tabindex="-1">d. 测试 SSH 连接 <a class="header-anchor" href="#d-测试-ssh-连接" aria-label="Permalink to &quot;d. 测试 SSH 连接&quot;">​</a></h4><p>确保可以从 <code>hadoop1</code> 无密码登录到 <code>hadoop2</code> 和 <code>hadoop3</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hadoop2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hadoop3</span></span></code></pre></div><p>如果无需输入密码即可登录，说明配置成功。</p><h4 id="e-确保所有节点的-ssh-配置正确" tabindex="-1">e. 确保所有节点的 SSH 配置正确 <a class="header-anchor" href="#e-确保所有节点的-ssh-配置正确" aria-label="Permalink to &quot;e. 确保所有节点的 SSH 配置正确&quot;">​</a></h4><p>检查 <code>/etc/ssh/sshd_config</code> 文件，确保以下配置项正确：</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PubkeyAuthentication yes</span></span>
<span class="line"><span>AuthorizedKeysFile .ssh/authorized_keys</span></span></code></pre></div><p>然后重启 SSH 服务：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sshd</span></span></code></pre></div><h2 id="安装-jdk" tabindex="-1">安装 JDK <a class="header-anchor" href="#安装-jdk" aria-label="Permalink to &quot;安装 JDK&quot;">​</a></h2><ul><li><p>1.<strong>创建目录（分别在三台虚拟机的根目录下）</strong></p><p>存数据的</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /export/data</span></span></code></pre></div><p>存安装程序的</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /export/servers</span></span></code></pre></div><p>存安装包的</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /export/software</span></span></code></pre></div></li><li><p>2.<strong>上传 JDK 安装包并解压</strong></p><ul><li>可以用 rz 传，也可以直接用 WinSCP 传（把文件丢过去就完事了）</li><li>解压</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jdk-8u361-linux-x64.tar.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /export/servers/</span></span></code></pre></div></li><li><p>3.<strong>配置 JDK 系统环境变量（我是第三步）</strong></p><ul><li>编辑环境变量文件</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/profile</span></span></code></pre></div><ul><li>打开文件后在最后一个的＃的下一行加入以下（其实就是正常的书写习惯）</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/export/servers/jdk1.8.0_361</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH:$JAVA_HOME/bin</span></span></code></pre></div><ul><li>初始化系统环境变量（如果有误，执行完后这里会报错）</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/profile</span></span></code></pre></div></li><li><p>4.<strong>查看版本（看得到就成功）</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -version</span></span></code></pre></div></li><li><p>5.<strong>使用 WinSCP 复制当前 JDK 到其他虚拟机下</strong></p><ul><li>复制粘贴，无需多言</li><li>粘过去后，回溯第 3 步，修改一下环境变量文件或者你直接把这个文件也复制到同一个地方去</li><li>遭遇权限问题，请用此妙计</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 755</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /export/servers/jdk1.8.0_361/</span></span></code></pre></div></li></ul>`,47)]))}const g=i(t,[["render",n]]);export{c as __pageData,g as default};
